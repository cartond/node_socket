{"version":3,"file":"cloudEventsDispatcher.js","sourceRoot":"","sources":["../../src/cloudEventsDispatcher.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HTTP, CloudEvent } from \"cloudevents\";\nimport { IncomingMessage, ServerResponse } from \"http\";\nimport { URL } from \"url\";\nimport { logger } from \"./logger\";\nimport * as utils from \"./utils\";\n\nimport {\n  ConnectRequest,\n  ConnectResponse,\n  UserEventRequest,\n  DisconnectedRequest,\n  ConnectedRequest,\n  ConnectionContext,\n  ConnectResponseHandler,\n  UserEventResponseHandler,\n  WebPubSubEventHandlerOptions\n} from \"./cloudEventsProtocols\";\n\nenum EventType {\n  Connect,\n  Connected,\n  Disconnected,\n  UserEvent\n}\n\nfunction getConnectResponseHandler(\n  connectRequest: ConnectRequest,\n  response: ServerResponse\n): ConnectResponseHandler {\n  const states: Record<string, any> = connectRequest.context.states;\n  let modified = false;\n  const handler = {\n    setState(name: string, value: unknown): void {\n      states[name] = value;\n      modified = true;\n    },\n    success(res?: ConnectResponse): void {\n      response.statusCode = 200;\n      if (modified) {\n        response.setHeader(\"ce-connectionState\", utils.toBase64JsonString(states));\n      }\n      if (res === undefined) {\n        response.end();\n      } else {\n        response.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n        response.end(JSON.stringify(res));\n      }\n    },\n    fail(code: 400 | 401 | 500, detail?: string): void {\n      response.statusCode = code;\n      response.end(detail ?? \"\");\n    }\n  };\n\n  return handler;\n}\n\nfunction getUserEventResponseHandler(\n  userRequest: UserEventRequest,\n  response: ServerResponse\n): UserEventResponseHandler {\n  const states: Record<string, any> = userRequest.context.states;\n  let modified = false;\n  const handler = {\n    setState(name: string, value: unknown): void {\n      modified = true;\n      states[name] = value;\n    },\n    success(data?: string | ArrayBuffer, dataType?: \"binary\" | \"text\" | \"json\"): void {\n      response.statusCode = 200;\n      if (modified) {\n        response.setHeader(\"ce-connectionState\", utils.toBase64JsonString(states));\n      }\n\n      switch (dataType) {\n        case \"json\":\n          response.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n          break;\n        case \"text\":\n          response.setHeader(\"Content-Type\", \"text/plain; charset=utf-8\");\n          break;\n        default:\n          response.setHeader(\"Content-Type\", \"application/octet-stream\");\n          break;\n      }\n      response.end(data ?? \"\");\n    },\n    fail(code: 400 | 401 | 500, detail?: string): void {\n      response.statusCode = code;\n      response.end(detail ?? \"\");\n    }\n  };\n  return handler;\n}\n\nfunction getContext(ce: CloudEvent, origin: string): ConnectionContext {\n  const context = {\n    signature: ce[\"signature\"] as string,\n    userId: ce[\"userid\"] as string,\n    hub: ce[\"hub\"] as string,\n    connectionId: ce[\"connectionid\"] as string,\n    eventName: ce[\"eventname\"] as string,\n    origin: origin,\n    states: utils.fromBase64JsonString(ce[\"connectionstate\"] as string)\n  };\n\n  // TODO: validation\n  return context;\n}\n\nfunction tryGetWebPubSubEvent(req: IncomingMessage): EventType | undefined {\n  // check ce-type to see if it is a valid WebPubSub CloudEvent request\n  const prefix = \"azure.webpubsub.\";\n  const connect = \"azure.webpubsub.sys.connect\";\n  const connected = \"azure.webpubsub.sys.connected\";\n  const disconnectd = \"azure.webpubsub.sys.disconnected\";\n  const userPrefix = \"azure.webpubsub.user.\";\n  const type = utils.getHttpHeader(req, \"ce-type\");\n  if (!type?.startsWith(prefix)) {\n    return undefined;\n  }\n  if (type.startsWith(userPrefix)) {\n    return EventType.UserEvent;\n  }\n  switch (type) {\n    case connect:\n      return EventType.Connect;\n    case connected:\n      return EventType.Connected;\n    case disconnectd:\n      return EventType.Disconnected;\n    default:\n      return undefined;\n  }\n}\n\nfunction isWebPubSubRequest(req: IncomingMessage): boolean {\n  return utils.getHttpHeader(req, \"ce-awpsversion\") !== undefined;\n}\n\n/**\n * @internal\n */\nexport class CloudEventsDispatcher {\n  private readonly _allowAll: boolean = true;\n  private readonly _allowedOrigins: Array<string> = [];\n  constructor(private hub: string, private eventHandler?: WebPubSubEventHandlerOptions) {\n    if (Array.isArray(eventHandler)) {\n      throw new Error(\"Unexpected WebPubSubEventHandlerOptions\");\n    }\n    if (eventHandler?.allowedEndpoints !== undefined) {\n      this._allowedOrigins = eventHandler.allowedEndpoints.map((endpoint) =>\n        new URL(endpoint).host.toLowerCase()\n      );\n      this._allowAll = false;\n    }\n  }\n\n  public handlePreflight(req: IncomingMessage, res: ServerResponse): boolean {\n    if (!isWebPubSubRequest(req)) {\n      return false;\n    }\n    const origin = utils.getHttpHeader(req, \"webhook-request-origin\")?.toLowerCase();\n\n    if (origin === undefined) {\n      logger.warning(\"Expecting webhook-request-origin header.\");\n      res.statusCode = 400;\n    } else if (this._allowAll || this._allowedOrigins.indexOf(origin!) > -1) {\n      res.setHeader(\"WebHook-Allowed-Origin\", origin!);\n    } else {\n      logger.warning(\"Origin does not match the allowed origins: \" + this._allowedOrigins);\n      res.statusCode = 400;\n    }\n\n    res.end();\n    return true;\n  }\n\n  public async handleRequest(request: IncomingMessage, response: ServerResponse): Promise<boolean> {\n    if (!isWebPubSubRequest(request)) {\n      return false;\n    }\n\n    // check if it is a valid WebPubSub cloud events\n    const origin = utils.getHttpHeader(request, \"webhook-request-origin\");\n    if (origin === undefined) {\n      return false;\n    }\n\n    const eventType = tryGetWebPubSubEvent(request);\n    if (eventType === undefined) {\n      return false;\n    }\n\n    // check if hub matches\n    const hub = utils.getHttpHeader(request, \"ce-hub\");\n    if (hub !== this.hub) {\n      return false;\n    }\n\n    // No need to read body if handler is not specified\n    switch (eventType) {\n      case EventType.Connect:\n        if (!this.eventHandler?.handleConnect) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.Connected:\n        if (!this.eventHandler?.onConnected) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.Disconnected:\n        if (!this.eventHandler?.onDisconnected) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.UserEvent:\n        if (!this.eventHandler?.handleUserEvent) {\n          response.end();\n          return true;\n        }\n        break;\n      default:\n        logger.warning(`Unknown EventType ${eventType}`);\n        return false;\n    }\n\n    const eventRequest = await utils.convertHttpToEvent(request);\n    const receivedEvent = HTTP.toEvent(eventRequest);\n\n    logger.verbose(receivedEvent);\n\n    switch (eventType) {\n      case EventType.Connect: {\n        const connectRequest = receivedEvent.data as ConnectRequest;\n        connectRequest.context = getContext(receivedEvent, origin);\n        this.eventHandler.handleConnect!(\n          connectRequest,\n          getConnectResponseHandler(connectRequest, response)\n        );\n        return true;\n      }\n      case EventType.Connected: {\n        // for unblocking events, we responds to the service as early as possible\n        response.end();\n        const connectedRequest = receivedEvent.data as ConnectedRequest;\n        connectedRequest.context = getContext(receivedEvent, origin);\n        this.eventHandler.onConnected!(connectedRequest);\n        return true;\n      }\n      case EventType.Disconnected: {\n        // for unblocking events, we responds to the service as early as possible\n        response.end();\n        const disconnectedRequest = receivedEvent.data as DisconnectedRequest;\n        disconnectedRequest.context = getContext(receivedEvent, origin);\n        this.eventHandler.onDisconnected!(disconnectedRequest);\n        return true;\n      }\n      case EventType.UserEvent: {\n        let userRequest: UserEventRequest;\n        if (receivedEvent.data_base64 !== undefined) {\n          userRequest = {\n            context: getContext(receivedEvent, origin),\n            data: Buffer.from(receivedEvent.data_base64, \"base64\"),\n            dataType: \"binary\"\n          };\n        } else if (receivedEvent.data !== undefined) {\n          userRequest = {\n            context: getContext(receivedEvent, origin),\n            data: receivedEvent.data as string,\n            dataType: receivedEvent.datacontenttype?.startsWith(\"application/json;\")\n              ? \"json\"\n              : \"text\"\n          };\n        } else {\n          throw new Error(\"Unexpected data.\");\n        }\n\n        this.eventHandler.handleUserEvent!(\n          userRequest,\n          getUserEventResponseHandler(userRequest, response)\n        );\n        return true;\n      }\n      default:\n        logger.warning(`Unknown EventType ${eventType}`);\n        return false;\n    }\n  }\n}\n"]}